ls()
R=(1+1/(2h))/2
R->(1+1/(2h))/2
R<-2*x
x<-(0,0.1,0.2,0.3)
x<-c(0,0.1,0.2,0.3)
R<-2*x
plot(R)
h<-seq(0,1,by=0.1)
R<-(1+1/(2*h))/2)
inter<-1/(2*h)
R<-(1+inter)/2
plot(R)
R<-(1+1/(2*h))/2
plot(R)
plot(h)
plot(h,R)
get(Wd)
help get
get wd
getwd()
q
quit
save
Line<-1
plot(h,Line, add=TRUE)
Line<-seq(1,11; by=0)
Line<-seq(1,11, by=0)
Line<-c(1,1,1,1,1,1,1,1,1,1,1)
plot(h,Line, add=TRUE)
plot(h,R)
MyName<-"Anya"
class(MyName)
myName<-"123"
class(myName)
height<-c(12,2,3)
class(height)
typeof(height)
arg(rbin)
args(rbinom)
coins<-rbinom(10,10,05)
coins<-rbinom(10,10,0.5)
coins
plot(coins)
set.seed(31)
heightsCM=rnorm(30,mean=188,sd=5)
weightsK=rnorm(30,mean=84,sd=3)
hasDaughter=sample(c(TRUE,FALSE),size=30,replace=T)
dataFrame=data.frame(heightsCM,weightsK,hasDaughter)
dataFrame
dataFrame[heightsCM>188, ]
dataFrameSubset<-dataFrame[heightsCM>188, ]
dataFrame
dataFrameSubset<-dataFrame[heightsCM>188, ]
dataFrameSubset
mean(dataFrameSubset$weightsK)
args(rcauchy)
set.seed(41)
cauchyValues<-rcauchy(100)
cauchyValues
args(sample)
se.seed(415)
set.seed(415)
sample(cauchyValues,10,replace=T)
getwd()
rstudio::saveHistory("C:/Users/Anna/Desktop/Anya_Courses/Pre-course quizz/Rhistory.Rhistory")
set.seed(31)
heightsCM=rnorm(30,mean=188,sd=5)
weightsK=rnorm(30,mean=84,sd=3)
hasDaughter=sample(c(TRUE,FALSE),size=30,replace=T)
dataFrame=data.frame(heightsCM,weightsK,hasDaughter)
dataFrame
dataFrame[heightsCM>188, ]
dataFrameSubset<-dataFrame[heightsCM>188, ]
dataFrameSubset
mean(dataFrameSubset$weightsK)
set.seed(41)
cauchyValues<-rcauchy(100)
set.seed(415)
sample(cauchyValues,10,replace=T)
?rnumber
??rnum
?rnum
Seq1<-sample(1:6, 100, replace=T)
Seq1
Seq1<-sample(1:2, 100, replace=T)
Seq1
Seq1<-sample(0:1, 100, replace=T)
Seq1
Seq2<-Seq1
Seq2
Seq1<-Seq1+1
Seq1
Seq2
args(rpoisson)
args(rpoison)
?distribution
MyMut<-rpois(5,5)
Mymut
MyMut
rstudio::loadHistory("C:/Users/Anna/Desktop/Anya_Courses/DataAnalysis/Project1/.Rhistory")
N=100
source('C:/Users/Anna/Desktop/Anya/Anya_Work/Rwork/PolDiv/FindPolymorphism_2.R')
a<-available.packages()
head(rownames(a),5)
find.package("devtools")
install.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
install.package(KernSmooth)
install.packages(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
source('~/.active-rstudio-document')
B<matrix(c(1,2,3,4),2,2)
B<-matrix(c(1,2,3,4),2,2)
swd
pwd
getwd
getwd()
source('~/test.R')
makeCacheMatrix(B)
xx<-makeCacheMatrix(B)
xxx<-cacheSolve(XX)
xxx<-cacheSolve(xx)
xxx
source('~/test.R')
source('~/test.R')
xx<-makeCacheMatrix(B)
xxx<-cacheSolve(xx)
xxx
cacheSolve(xx)
source('C:/Users/Anna/Desktop/Anya/Anya_Git/ProgrammingAssignment2/cachematrix.R')
xx<-makeCacheMatrix(B)
xxx<-cacheSolve(xx)
xxx
source('~/test.R')
B<-matrix(c(3,5,7,8),2,2)
xx<-makeCacheMatrix(B)
xxx<-cacheSolve(xx)
xxx
library(ggplot2)
library(ggplot2)
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
install.packages("GGally")
install.packages("caret")
install.packages("glmnet")
install.packages("MASS")
install.packages("e1071")
install.packages("ada")
install.packages("randomForest")
install.packages("sparsediscrim")
install.packages("PerfMeas")
install.packages("caTools")
install.packages("limma")
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite(c("limma", "genefilter"))
source("http://bioconductor.org/biocLite.R")
?BioCUpgrade
biocLite()
biocValid()
biocValid("limma")
biocLite("limma")
update.packages("pbkrtest")
source("http://www.bioconductor.org/biocLite.R")
biocLite()
biocLite("limma")
x <- 1
x
class(x)
typeof(x)
x <- 1L
typeof(x)
.Machine$integer.max
v <- c(1:3)
class(v)
v1 <- as.numeric(v)
class(v)
class(v1)
m <- matrix(1:9,nrows=3, ncol=3)
m <- matrix(1:9,nrow=3, ncol=3)
m
nrow(m)
ncol(m)
m <- matrix(1:9,nrow=3, ncol=3, byrow=TRUE)
m
x <- data.frame(sex=c("M","F","M"), age=c(23,45,40))
x
x$sex
x$age
class(x$age)
str(x$age)
x$age[1]
x[1,"age"]
x[[age]]
x[["age"]]
x["age"]
sapply(x, class)
library(IRanges)
ir1 <- IRanges(start=c(1,3,5), end=c(3,5,7))
ir1
start(ir1)
end(ir1)
lenght(ir1)
length(ir1)
ir1[1]
ir2 <- IRanges(start=c(1,3,5), width=1)
ir2
c(ir1,ir2)
par(mfrow=c(2,1))
ir <- IRanges(start=c(1,3,7,9), end=c(4,4,8,10))
plotRanges(ir)
install.packages("rmarkdown")
install.packages("biomaRt")
install.packages("biomartr")
install.packages("GenomicRanges")
source("http://www.bioconductor.org/biocLite.R")
biocLite()
library(GenomicRanges)
gr <- GRanges(seqnames=c("chr1"), strand=c("+","-","+"),ranges=IRanges(start=c(1,3,5),width=3))
install.packages("GRanges")
biocValid()
biocLite()
biocLite()
library(GenomicRanges)
install.packages(GenomeInfoDb)
install.packages("GenomeInfoDb")
library("GenomicRanges", lib.loc="~/R/win-library/3.2")
install.packages("GenomeInfoDb")
rmarkdown::render_site()
rmarkdown::render_site()
getwd()
rmarkdown::render_site()
library(GEOquery)
library(knitr)
names(knit_engines$get())
data(CO2)
data <- data(CO2)
data
data[[1]]
data(CO2)
CO2
mydata <- CO2
mydata
View(mydata)
data(esoph)
View(esoph)
install.packages("swirl")
library(swirl)
install_course("The R Programming Environment")
swirl()
x <- 3:6
str(x)
x[1]
class(x)
y <- v(3:6)
y <- c(3:6)
class(y)
y <- c(TRUE, 2)
class(y)
y[1]
y <- c(FALSE, 2)
y[1]
x <- data.frame(foo = 1:4, bar = c(T, T, F, F))
str(x)
attr(x)
names(x)
attributes(x)
class(x)
row.names(x)
zika_file <- "https://raw.githubusercontent.com/cdcepi/zika/master/Brazil/COES_Microcephaly/data/COES_Microcephaly-2016-06-25.csv"
zika_brazil <- read_csv(zika_file)
install.packages("readr")
library(readr)
zika_brazil <- read_csv(zika_file)
head(zika_brazil)
zika_file <- "https://github.com/cdcepi/zika/blob/master/Brazil/COES_Microcephaly/data/COES_Microcephaly-2016-06-25.csv"
zika_brazil <- read_csv(zika_file)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div=z/my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
ls90
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
plants$Active_Growth_Period
table(plants$Active_Growth_Period)
str(plants)
install_course("Statistical_Inference")
swirl()
exit
quit
q()
version
?nycflights13
install.packages("dplyr")
library("dplyr")
library(nycflights13)
?nycflights13
nycflights13
data(nycflights13)
library(nycflights13)
nycflights13
nasa
rm nasa
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
dim(flights)
head(flights)
install.packages("fivethirtyeight")
police_killings
install.packages("police_killings")
version
police_killings
library(police_killings)
library(fivethirtyeight)
police_killings
head(police_killings)
dim(police_killings)
head(flights)
library(nycflights13)
dim(flights)
head(flights)
dim(flights)
myFlights=flights
View(myFlights)
str(flights)
View(myFlights)
filter(flights, month == 1, day == 1)
filter(flights, month == 1, day == 30)
filter(flights, month == 1, day == 300)
filter(flights, month == 1, day == 31)
slice(flights, 1:10)
arrange(flights, year, month, day)
arrange(flights, year, arr_time)
a=rename(flights, tail_num = tailnum)
head(a)
select(a, tailnum)
select(a, tail_num)
distinct(flights, tailnum)
View(m)
version
?
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
version
mean(c(2.23, 3.45, 1.87, 2.11, 7.33, 18.34, 19.23))
for i in 1:25
print(i)
for(i in 1:25)
print(i)
for(i in 1:25)
sum=i^2
print(sum)
sum=0
for(i in 1:25)
sum=sum+i^2
print(sum)
cars
cars
class(cars)
dim(cars)
names(cars)
mean(cars[,2])
which(cars$dist==85)
which(car)
which(cars)
cars$dist==85
R version
setwd("C:/Users/Anna/Desktop/SWC_fall2017/R_scripts")
fileName <- '../Data/gapminder.txt'
gapminder <- read.table(fileName, header=TRUE)
dim(gapminder)
fileName <- ‘…/Data/gapminder.txt’
rm(list<-ls())
menuItems<-c("chicken", "soup", "salad", "tea")
menuType<-factor(c("solid", "liquid", "solid", "liquid"))
menuCost<-c(4.99, 2.99, 3.29, 1.89)
myOrder<-list(menuItems, menuType, menuCost)
myOrder
myOrder_df<-as.data.frame(myOrder)
myOrder_df
menuItems<-c("chicken", "soup", "salad", "tea")
menuType<-factor(c("solid", "liquid", "solid", "liquid"))
menuCost<-c(4.99, 2.99, 3.29, 1.89)
myOrder<-list(menuItems, menuType, menuCost)
myOrder_df<-data.frame(menuItems, menuType, menuCost)
myOrder[c(2,4)]
fahr_to_kelvin <- function(temp) {
kelvin <- ((temp - 32) * (5/9)) + 273.15
kelvin
}
fahr_to_kelvin(32)
kelvin_to_celsius <- function(temp) {
Celsius <- temp - 273.15
Celsius
}
print(paste('absolute zero in Celsius:', kelvin_to_celsius(0)))
fence <- function(original, wrapper) {
result <- paste0(wrapper, original, wrapper)
return(result)
}
# test function call
print(fence('James', '***'))
fileName <- '../Data/gapminder.txt'
# read the data file
gapminder <- read.csv(fileName, header=TRUE)
View(gapminder)
gapminder <- read.csv(fileName, header=TRUE)
gapminder <- read.table(fileName, header=TRUE)
getAverageGdpPerCapita <- function(country, startYear, endYear) {
# extract gdpPercap from the gapminder data for the specified country.
selectedCountryData <- gapminder[gapminder$country == country &
gapminder$year >= startYear &
gapminder$year <= endYear, 'gdpPercap']
mean(selectedCountryData)
}
gdpUSA <- getAverageGdpPerCapita('United States', 1980, 1989)
gdpCanada <- getAverageGdpPerCapita('Canada')
print(paste('GDP of USA is', gdpUSA))
print(paste('GDP of Canada is', gdpCanada))
getAverageGdpPerCapita <- function(country, startYear = 1952, endYear = 2007) {
# extract gdpPercap from the gapminder data for the specified country.
selectedCountryData <- gapminder[gapminder$country == country &
gapminder$year >= startYear &
gapminder$year <= endYear, 'gdpPercap']
mean(selectedCountryData)
}
gdpUSA <- getAverageGdpPerCapita('United States', 1980, 1989)
gdpCanada <- getAverageGdpPerCapita('Canada')
print(paste('GDP of USA is', gdpUSA))
getAverageGdpPerCapita <- function(country, startYear = 1952, endYear = 2007) {
# extract gdpPercap from the gapminder data for the specified country.
selectedCountryData <- gapminder[gapminder$country == country &
gapminder$year >= startYear &
gapminder$year <= endYear, 'gdpPercap']
mean(selectedCountryData)
}
gdpUSA <- getAverageGdpPerCapita('United States', 1980, 1989)
gdpCanada <- getAverageGdpPerCapita('Canada')
print(paste('GDP of USA is', gdpUSA))
getAverageGdpPerCapita <- function(country, startYear = 1952, endYear = 2007) {
# extract gdpPercap from the gapminder data for the specified country.
selectedCountryData <- gapminder[gapminder$country == country &
gapminder$year >= startYear &
gapminder$year <= endYear, 'gdpPercap']
mean(selectedCountryData)
}
gdpUSA <- getAverageGdpPerCapita('United States', 1980, 1989)
gdpCanada <- getAverageGdpPerCapita('Canada')
print(paste('GDP of USA is', gdpUSA))
gdpUSA <- getAverageGdpPerCapita('United States', 1980, 1989)
gdpUSA
fileName <- '../Data/gapminder.txt'
# read the data file
gapminder <- read.table(fileName, header=TRUE)
View(gapminder)
gdpUSA <- getAverageGdpPerCapita('United_States', 1980, 1989)
gdpCanada <- getAverageGdpPerCapita('Canada')
gdpUS
gdpUSA
